{"version":3,"sources":["helpers/recetas.js","components/busquedaScreen/ResultadosDiv.js","hooks/useFetchBusqueda.js","components/busquedaScreen/BuscarScreen.js","helpers/fetch.js","hooks/useFetch.js","components/home/RecetaCard.js","components/home/HomeScreen.js","router/Autentificando.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreenForm.js","components/auth/RegisterScreen.js","hooks/useFetchCreateUsuario.js","router/AuthRouter.js","router/PrivateRoute.js","components/recetasScreen/RecetaItem.js","components/crearReceta/CrearForm.js","components/crearReceta/CrearReceta.js","hooks/useFetchCrearReceta.js","components/misRecetasScreen/EdicionScreen.js","hooks/useFetchActualizaReceta.js","components/misRecetasScreen/MisRecetasScreen.js","hooks/useFetchAll.js","components/recetasScreen/RecetaScreen.js","router/PrivateRouter.js","router/PublicRoute.js","router/AppRouter.js","App.js","index.js"],"names":["obtenerRecetaId","a","parametro","signal","token","localStorage","getItem","fetch","mode","headers","response","json","body","res","receta","console","log","busquedaRecetas","url","results","ResultadosDiv","buscar","useState","data","loading","busqueda","setBusqueda","useEffect","then","useFetchBusqueda","map","info","className","nombre","_id","length","BuscarScreen","uid","inputValue","setInputValue","setBuscar","onSubmit","e","preventDefault","trim","alert","type","name","value","autoComplete","onChange","target","fetchSinToken","endpoint","optional","method","JSON","stringify","fetchConToken","respuesta","useFetch2","state","setState","controller","AbortController","isActive","abort","RecetaCard","to","HomeScreen","total","recetas","error","msg","fetchFuntion","valule","useFetch","undefined","Autentificando","useForm","initialState","values","setValues","resetValues","campos","newCampos","campo","handleInputChange","LoginScreen","setUid","setName","setLoading","seterror","formValues","correo","password","handleSubmit","replace","setItem","usuario","disabled","RegisterScreenForm","postFuntion","RegisterScreen","rol","Object","keys","msgError","errors","setTimeout","useFetchCreateUsuario","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","propiedades","rest","props","RecetaItem","ingredientes","procedimiento","ing","i","paso","CrearForm","CrearReceta","separador","variable","split","element","newData","useFetchCrearReceta","EdicionScreen","recetaId","useParams","VerificaNombre","VerificaIngredientes","VerificaProcedimiento","useFetchActualizaReceta","loading2","actualizarFuncion","nombreInicial","ingredientesInicial","procedimientoInicial","toString","MisRecetasScreen","useFetchAlll","RecetaScreen","PrivateRouter","PublicRoute","AppRouter","wait","setWait","name1","uid1","onClick","clear","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e020a2c.chunk.js","sourcesContent":["\r\nconst obtenerRecetas = async() => {\r\n  try {\r\n    const response = await fetch('http://localhost:8080/api/recetas/',{\r\n      mode: \"cors\"\r\n    })\r\n    const body = await response.json();\r\n    // const res = body.recetas.map( (receta) => {\r\n    //   return {\r\n    //     nombre: receta.nombre\r\n    //   }   \r\n    // });\r\n\r\n    const res = [...body.recetas];\r\n    // console.log(body);\r\n    // // const res = [...body];\r\n    // console.log(res);\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return null\r\n  }\r\n};\r\nconst obtenerRecetaId = async(parametro= '', signal) => {\r\n  const token = localStorage.getItem('token') || '';\r\n  try {\r\n    const response = await fetch(`http://localhost:8080/api/recetas/${parametro}`,{\r\n    // const response = await fetch(`https://recetario-pang.herokuapp.com/api/recetas/${parametro}`,{\r\n      signal,\r\n      mode: 'cors',\r\n      headers: {\r\n        'x-token': token\r\n      }\r\n    })\r\n    const body = await response.json();\r\n    // const res = body.recetas.map( (receta) => {\r\n    //   return {\r\n    //     nombre: receta.nombre\r\n    //   }   \r\n    // });\r\n\r\n    const res = body.receta;\r\n    console.log(body)\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return null\r\n  }\r\n};\r\n\r\nconst obtenerUsuarios = async(parametro = '') => {\r\n  try {\r\n    const url = `http://localhost:8080/api/buscar/usuarios/${parametro}`;\r\n    // const url = `https://recetario-pang.herokuapp.com/api/buscar/usuarios/${parametro}`;\r\n    const response = await fetch(url,{\r\n      mode: 'cors'\r\n    });\r\n    const body = await response.json();\r\n    const res = [...body.results];\r\n    console.log(body)\r\n    console.log(res)\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n    console.log('aqui')\r\n    return []\r\n  }\r\n}\r\n\r\n//Función para busqueda de usuarios\r\nconst busquedaRecetas = async(parametro = '') => {\r\n  try{\r\n    const url = `http://localhost:8080/api/buscar/recetas/${parametro}`;\r\n    // const url = `https://recetario-pang.herokuapp.com/api/buscar/recetas/${parametro}`;\r\n    const response = await fetch(url, {\r\n      mode: 'cors'\r\n    });\r\n\r\n    const body = await response.json();\r\n    const res = [...body.results];\r\n    console.log(body);\r\n    return res;\r\n    \r\n  }catch (error){\r\n    console.log(error);\r\n    return [];\r\n  }\r\n}\r\n\r\n\r\nexport{\r\n  obtenerRecetas,\r\n  obtenerUsuarios,\r\n  obtenerRecetaId,\r\n  busquedaRecetas\r\n}\r\n\r\n","import React from 'react'\r\nimport { useFetchBusqueda } from '../../hooks/useFetchBusqueda';\r\nexport const ResultadosDiv = ({buscar}) => {\r\n    console.log('resultadosDiv')\r\n    const {data,loading} = useFetchBusqueda(buscar);\r\n    return (\r\n        <div>\r\n            {loading && <p>Cargando...</p>}\r\n            \r\n            {       \r\n               data &&  data.map(info => (<p className='' key = {info._id}>{info.nombre}</p> ))\r\n            }  \r\n            {!loading && (data.length === 0) && <p>Sin coincidencias</p> }   \r\n               \r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { busquedaRecetas, obtenerUsuarios } from \"../helpers/recetas\";\r\n\r\n\r\n\r\n\r\nexport const useFetchBusqueda = (parametro = '') => { \r\n\r\n\r\n    const [busqueda, setBusqueda] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        busquedaRecetas(parametro)\r\n            .then(data => {\r\n                setBusqueda({\r\n                    data,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [parametro])\r\n    return busqueda\r\n}","import React, { useState } from 'react'\r\nimport { ResultadosDiv } from './ResultadosDiv';\r\n\r\nexport const BuscarScreen = ({uid}) => {\r\n\r\n    console.log(uid)\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [buscar, setBuscar] = useState(null)\r\n    // const {data} = useFetchBusqueda(buscar)\r\n    // console.log(buscar)\r\n    const handleInputChange = ({target}) => {\r\n        setInputValue( target.value);\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length === 0){\r\n            alert('nop we no te mames');\r\n        }else{\r\n            setBuscar(inputValue);\r\n            setInputValue('');\r\n        }\r\n    } \r\n\r\n    return (\r\n        <div>\r\n            <h2>Búsquedas encontradas</h2>\r\n            <form   onSubmit = {handleSubmit} className= 'formContainer container'>\r\n                <label>Buca tu receta</label>\r\n                <input\r\n                    type= 'text' \r\n                    name = 'inputValue'\r\n                    value = {inputValue}\r\n                    autoComplete = 'off'\r\n                    onChange = {handleInputChange}\r\n                />\r\n                \r\n                <input \r\n                    type = 'submit'\r\n                />\r\n            </form>\r\n            {(buscar &&\r\n            <ResultadosDiv\r\n            \r\n                buscar = {buscar}\r\n            />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","// const fetchSinToken = ( endpoint ,data, method = 'GET' ) => {\r\n\r\n//     const url = `${baseUrl}/${endpoint}`; // localhost:4000/api/\r\n//     if (method === 'GET'){\r\n//         return fetch(url);\r\n//     }else{\r\n//         return fetch(url,{\r\n//             method,\r\n//             headers:{\r\n//                 'content-type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify(data)\r\n//         });\r\n//     }\r\n// };\r\n\r\n\r\nconst fetchSinToken = (endpoint, optional = '', data, method = 'GET') => {\r\n\r\n    const url = `http://localhost:8080/api/${endpoint}/${optional}`;\r\n    // const url = `https://recetario-pang.herokuapp.com/api/${endpoint}/${optional}`;\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            mode: 'cors',\r\n            headers:{\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\nconst fetchConToken = async(endpoint, optional = '', data, method = 'GET',signal = null) => {\r\n\r\n    const url = `http://localhost:8080/api/${endpoint}/${optional}`;\r\n    // const url = `https://recetario-pang.herokuapp.com/api/${endpoint}/${optional}`;\r\n    const token = localStorage.getItem('token');\r\n\r\n\r\n    if(method === 'GET'){\r\n        try {\r\n            const respuesta = await fetch(url,{\r\n                signal,\r\n                mode: 'cors',\r\n                headers: {\r\n                    'x-token': token,\r\n                    'content-type': 'application/json'\r\n                }\r\n            });\r\n            const body = await respuesta.json();\r\n            console.log(body);\r\n            return body;\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }else{\r\n        try {\r\n            const respuesta = await fetch(url,{\r\n                method,\r\n                signal,\r\n                mode: 'cors',\r\n                headers:{\r\n                    'x-token': token,\r\n                    'content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            });\r\n            const body = await respuesta.json();\r\n            console.log(body);\r\n            return body;\r\n            \r\n        } catch (error) {\r\n            console.log('hola soy un error',error)\r\n            return null\r\n        }\r\n    }\r\n}\r\n// const fetchConToken = (endpoint, optional = '', data, method = 'GET') => {\r\n\r\n//     const url = `http://localhost:8080/api/${endpoint}/${optional}`;\r\n\r\n//     if(method === 'GET'){\r\n//         return fetch(url,{\r\n//             headers: {\r\n//                 'x-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI2MGY1MzkyYTI4NjA4NDBjNjgwOTg4NTQiLCJpYXQiOjE2MzE1NjUzNDYsImV4cCI6MTYzNDE1NzM0Nn0.Td6gr64_EZpCDMd9E-xUIaLj2cLBYflmiJh37OGk9CI'\r\n//             }\r\n//         });\r\n//     }else{\r\n//         return fetch(url,{\r\n//             method,\r\n//             headers:{\r\n//                 'x-token': 'token',\r\n//                 'content-type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify(data)\r\n//         });\r\n//     }\r\n// }\r\n\r\nexport{\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import { useEffect, useState } from \"react\";\r\nimport { fetchSinToken } from \"../helpers/fetch\";\r\nimport { obtenerRecetaId, obtenerRecetas } from \"../helpers/recetas\";\r\n\r\n\r\n// export const useFetch = () => {\r\n\r\n//     const [state, setState] = useState({\r\n//         data: [],\r\n//         loading: true,\r\n//         error: {\r\n//             value: false,\r\n//             msg: ''\r\n//         }\r\n//     });\r\n\r\n\r\n//     useEffect(() => {\r\n//         obtenerRecetas()\r\n//             .then(data => {\r\n//                 (data)?\r\n//                 setState({\r\n//                     data,\r\n//                     loading: false,\r\n//                     error: {\r\n//                         value: false,\r\n//                         msg: ''\r\n//                     }\r\n//                 })\r\n//                 :\r\n//                 setState({\r\n//                     data,\r\n//                     loading:false,\r\n//                     error: {\r\n//                         valule: true,\r\n//                         msg:'Algo salio mal'\r\n//                     }\r\n//                 })\r\n//             })\r\n//     }, []);\r\n\r\n//     return state\r\n\r\n\r\n\r\n// }\r\nexport const useFetch = (endpoint, optional,data,method) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: {\r\n            total: '',\r\n            recetas: []\r\n        },\r\n        loading: true,\r\n        error: {\r\n            value: false,\r\n            msg: ''\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchFuntion = async() => {\r\n\r\n            try {\r\n                const response = await fetchSinToken(endpoint,optional,data,method);\r\n                const body = await response.json();\r\n                // const prueba = {...body};\r\n                // console.log(response)\r\n                // console.log(body)\r\n                // console.log(prueba)\r\n                // // const res = [...body.recetas];\r\n                // const res = body\r\n                console.log(body)//Estoy es para ver que recibo\r\n                return body;\r\n            } catch (error) {\r\n                console.log(error)\r\n                return null;\r\n            }\r\n\r\n\r\n        }\r\n        fetchFuntion()\r\n            .then(data => {\r\n                data?\r\n                setState({\r\n                    data,\r\n                    loading: false,\r\n                    error: {\r\n                        value: false,\r\n                        msg: ''\r\n                    }\r\n                })\r\n                :\r\n                setState({\r\n                    data: [],\r\n                    loading:false,\r\n                    error: {\r\n                        valule: true,\r\n                        msg:'Algo salio mal'\r\n                    }\r\n                })\r\n            })    \r\n    }, [endpoint,optional,data,method]);\r\n\r\n    return state\r\n\r\n\r\n\r\n}\r\nexport const useFetch2 = (parametro = '') => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        let controller = new AbortController();\r\n        const signal = controller.signal;\r\n        let isActive = true;\r\n        // console.log(signal)    \r\n        obtenerRecetaId(parametro, signal)\r\n        .then(data => {\r\n            if (isActive){\r\n                setState({\r\n                    data,\r\n                    loading: false\r\n                });\r\n\r\n            }\r\n            // controller = null;\r\n        })\r\n        \r\n        return () => {\r\n            isActive = false;\r\n            // console.log(!!controller);\r\n            controller.abort();\r\n            // console.log('fetch abort');\r\n            // console.log(signal)\r\n        };\r\n    }, []);\r\n\r\n    return state\r\n}\r\n\r\nexport const useFetch3 = (parametro = '') => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        obtenerRecetaId(parametro)\r\n            .then(data => {\r\n                setState({\r\n                    data,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [parametro]);\r\n\r\n    return state\r\n\r\n\r\n\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './RecetaItem1.css'\r\n\r\nexport const RecetaCard = ({receta}) => {\r\n    return (\r\n        // <div className = 'cardReceta' >\r\n            /* <h5 className = 'marginBottomMrem'>{receta.nombre}</h5> */\r\n\r\n            // /* {\r\n            //         receta.ingredientes.map( (ingrediente, i) => (<p key = {i}>{ingrediente}</p>))                    \r\n            // } */\r\n            \r\n            <Link\r\n                className = 'cardReceta noStyle displayBlock'\r\n                to = {`./private/receta/${receta._id}`}\r\n            >{receta.nombre}</Link>\r\n        // </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetch } from '../../hooks/useFetch'\r\nimport { RecetaCard } from './RecetaCard';\r\n\r\nexport const HomeScreen = () => {\r\n    const {data:{recetas } , loading,error} = useFetch('recetas', undefined, undefined, undefined);\r\n    // console.log(data)\r\n    // console.log(error)\r\n    \r\n    return (\r\n        <div className = 'container'>\r\n            {loading && <p>Cargando....</p>}\r\n            {\r\n            (recetas) ?\r\n            recetas.map(receta => (<RecetaCard\r\n            key = {receta._id}\r\n            receta = {receta}\r\n            />))\r\n                : \r\n                (<p>{error.msg} </p> )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Autentificando = () => {\r\n  return (\r\n    <div>\r\n        <p>Autentificando...</p>\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from \"react\";\r\n\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    // function resetValues() {\r\n    //     setValues({\r\n    //         nombre: '',\r\n    //         ingredientes: '',\r\n    //         procedimiento: ''\r\n    //     });\r\n    // }\r\n    function resetValues(campos){\r\n\r\n        const newCampos = campos;\r\n        for(let campo in newCampos){\r\n            newCampos[campo] = '';\r\n        }\r\n        setValues({\r\n            ...newCampos\r\n        })\r\n        console.log(newCampos);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({target}) => {\r\n        \r\n    setValues({\r\n        ...values,\r\n        [target.name]: target.value\r\n        })\r\n    }\r\n    return [values, handleInputChange, resetValues];\r\n}","import React, {useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchSinToken } from '../../helpers/fetch';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = ({setUid,setName}) => {\r\n    \r\n    \r\n    const [data, setData] = useState(null)\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, seterror] = useState({\r\n        value: false,\r\n        msg: ''\r\n    })\r\n    const [formValues,handleInputChange, resetValues] = useForm()            \r\n    const {correo = '', password = ''} = formValues;\r\n\r\n    // useEffect(() => {\r\n    //     console.log('efecto')\r\n    // }, [data,loading,error])\r\n\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        if(correo.replace(/\\s+/g, '').length < 4 || password.replace(/\\s+/g, '').length < 4 ){\r\n            alert('nop');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        try {\r\n            const respuesta = await fetchSinToken('auth', 'login', formValues, 'POST');\r\n            const body = await respuesta.json();\r\n            console.log(body)\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('name', body.usuario.nombre);\r\n            localStorage.setItem('uid', body.usuario.uid);\r\n            setLoading(false);\r\n            setUid(body.usuario.uid);\r\n            setName(body.usuario.uid);\r\n            // setName(body.usuario.nombre);\r\n            // history.push('/crear');\r\n            // history.push('/crear');\r\n        } catch (error) {\r\n            seterror({\r\n                value: true,\r\n                msg: 'Hubo un error'\r\n            })\r\n            setLoading(false);\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <h3>Login screen</h3>\r\n            <form onSubmit = {handleSubmit}>\r\n                <label>Correo</label>        \r\n                \r\n                <input\r\n                    name = 'correo'\r\n                    value = {correo}\r\n                    type = 'text'\r\n                    onChange = {handleInputChange}\r\n                />\r\n                \r\n                <label>Contraseña</label>        \r\n\r\n                <input\r\n                    name = 'password'\r\n                    value = {password}\r\n                    type = 'text'\r\n                    onChange = {handleInputChange}\r\n                />\r\n\r\n                <input type = 'submit' value = 'Enviar' disabled = {loading}/>\r\n            </form>  \r\n\r\n            {\r\n                loading && <h4>loading....</h4>\r\n            } \r\n            {\r\n                error.value && <span>{error.msg}</span>\r\n            }\r\n\r\n            <Link\r\n                to = './register'\r\n            >Registrate</Link>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const RegisterScreenForm = ({postFuntion, loading}) => {\r\n\r\n    \r\n    const [formValues,handleInputChange, resetValues] = useForm()            \r\n    const {correo = '', password = '', nombre = ''} = formValues;\r\n\r\n\r\n    const handleSubmit = async(e) => {\r\n\r\n        e.preventDefault();\r\n        \r\n        // console.log(formValues);\r\n        if(correo.replace(/\\s+/g, '').length < 4 || password.replace(/\\s+/g, '').length < 4 || nombre.replace(/\\s+/g, '').length < 4 ){\r\n            alert('nop');\r\n            return;\r\n        }\r\n\r\n        await postFuntion('usuarios', undefined, formValues, 'POST', resetValues);\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Register screen</h3>\r\n            <form className='marginTop1rem' onSubmit={handleSubmit}>\r\n                <label className='displayBlock'>Nombre</label>\r\n                <input\r\n                    className='displayBlock'\r\n                    name = 'nombre'\r\n                    value={nombre}\r\n                    type='text'\r\n                    onChange={handleInputChange}\r\n                />\r\n                <label className='displayBlock' >Correo</label>\r\n                <input\r\n                    className='displayBlock'\r\n                    name = 'correo'\r\n                    value={correo}\r\n                    type='text'\r\n                    onChange={handleInputChange}\r\n                />\r\n                <label className='displayBlock'>Contraseña</label>\r\n                <input\r\n                    className='displayBlock'\r\n                    name = 'password'\r\n                    value={password}\r\n                    type= 'text'\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    className='marginTop1rem'\r\n                    type='submit'\r\n                    value='Registrame'\r\n                    disabled = {loading}\r\n                />\r\n            </form>\r\n            \r\n\r\n        </div>   \r\n    );\r\n};\r\n","import React from 'react'\r\nimport { useFetchCreateUsuario } from '../../hooks/useFetchCreateUsuario';\r\nimport { RegisterScreenForm } from './RegisterScreenForm';\r\n\r\nexport const RegisterScreen = () => {\r\n    \r\n    const [{data, loading, error, msg}, postFuntion] = useFetchCreateUsuario()\r\n    \r\n    // const [formValues,handleInputChange, resetValues] = useForm()            \r\n    // const {correo = '', password = '', nombre = ''} = formValues;\r\n\r\n    \r\n    // const handleSubmit = async(e) => {\r\n\r\n    //     e.preventDefault();\r\n        \r\n    //     // console.log(formValues);\r\n    //     if(correo.replace(/\\s+/g, '').length < 4 || password.replace(/\\s+/g, '').length < 4 || nombre.replace(/\\s+/g, '').length < 4 ){\r\n    //         alert('nop');\r\n    //         return;\r\n    //     }\r\n\r\n    //     postFuntion('usuarios', undefined, formValues, 'POST');\r\n    // }\r\n    return (\r\n        <>\r\n            {/* <h3>Register screen</h3>\r\n            <form className='marginTop1rem' onSubmit={handleSubmit}>\r\n                <label className='displayBlock'>Nombre</label>\r\n                <input\r\n                    className='displayBlock'\r\n                    name = 'nombre'\r\n                    value={nombre}\r\n                    type='text'\r\n                    onChange={handleInputChange}\r\n                />\r\n                <label className='displayBlock' >Correo</label>\r\n                <input\r\n                    className='displayBlock'\r\n                    name = 'correo'\r\n                    value={correo}\r\n                    type='text'\r\n                    onChange={handleInputChange}\r\n                />\r\n                <label className='displayBlock'>Contraseña</label>\r\n                <input\r\n                    className='displayBlock'\r\n                    name = 'password'\r\n                    value={password}\r\n                    type= 'text'\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    className='marginTop1rem'\r\n                    type='submit'\r\n                    value='Registrame'\r\n                />\r\n            </form> */}\r\n\r\n            <RegisterScreenForm postFuntion = {postFuntion} loading = {loading}  />\r\n            {\r\n                loading && <span>Cargando...</span>\r\n            }\r\n            {\r\n                error && <span>{msg}</span>\r\n            }\r\n            {\r\n                data && <pre>{JSON.stringify(data)}</pre>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport {fetchSinToken } from \"../helpers/fetch\";\r\n\r\n\r\nexport const useFetchCreateUsuario = () => {\r\n\r\n    const [state, setState] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: false,\r\n        msg: ''\r\n    });\r\n\r\n    const postFuntion = async(endpoint, optional, data, method, resetValues) => {\r\n        \r\n        setState({\r\n            ...state,\r\n            loading: true\r\n        });\r\n\r\n        try{\r\n            data.rol = 'USER_ROLE';\r\n            const respuesta = await fetchSinToken(endpoint, optional, data, method);\r\n            const body = await respuesta.json()\r\n            console.log(body);\r\n            if(Object.keys(body)[0] == 'errors'){\r\n                // console.log(Object.keys(body)[0] == 'errors');\r\n                // console.log(Object.keys(body));\r\n                // console.log(typeof Object.keys(body));\r\n                // console.log('Ocurrió un error');\r\n                // console.log(body.errors[0].msg);\r\n                const msgError = body.errors[0].msg;\r\n                setState({\r\n                    ...state,\r\n                    loading: false,\r\n                    error: true,\r\n                    msg: msgError,\r\n                });\r\n                setTimeout(() => {\r\n                    setState({\r\n                        ...state,\r\n                        error:false,\r\n                        msg: '',\r\n                        \r\n                    });\r\n                }, 3000);\r\n                \r\n            }else{\r\n                setState({\r\n                    ...state,\r\n                    error: true,\r\n                    loading: false,\r\n                    msg: 'Usuario registrado',\r\n                });\r\n                setTimeout(() => {\r\n                    setState({\r\n                        ...state,\r\n                        error: false,\r\n                        msg: '',\r\n                    })\r\n                }, 3000);\r\n                \r\n                resetValues(data);\r\n            }\r\n            \r\n            }catch(error){\r\n                console.log(error);\r\n                setState({\r\n                    ...state,\r\n                    loading: false,\r\n                    error: true,\r\n                    msg: 'Ocurrio un error'\r\n                });\r\n                setTimeout(() => {\r\n                    setState({\r\n                        ...state,\r\n                        error:false,\r\n                        msg: ''\r\n                    });\r\n                }, 3000);\r\n        }\r\n    }\r\n    return [state,postFuntion];\r\n}","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\n\r\nexport const AuthRouter = ({setUid,setName}) => {\r\n  console.log('paso por authROuter')\r\n  return( \r\n    <div>\r\n        <Switch>\r\n            <Route\r\n              exact\r\n              path= '/auth/login'\r\n            >\r\n              <LoginScreen\r\n                setUid={setUid}\r\n                setName={setName}\r\n              />\r\n            </Route>\r\n\r\n            <Route\r\n                exact\r\n                path = '/auth/register'\r\n                component = {RegisterScreen}\r\n            />\r\n\r\n            <Redirect to = '/'/>\r\n        </Switch>\r\n    </div>\r\n  )\r\n};\r\n","import React from 'react';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    propiedades,\r\n    ...rest\r\n}) => {\r\n    console.log('paso por privateRoute')\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } {...propiedades} /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}","import React from 'react'\r\nimport './recetaItem.css';\r\nexport const RecetaItem = ({nombre, ingredientes =[], procedimiento= []}) => {\r\n    // console.log(ingredientes)\r\n    // let variable = '';\r\n    // for(const x in ingredientes){\r\n    //     variable = variable + `${ingredientes[x]}, `\r\n    //     console.log(x)\r\n    // }\r\n    // console.log(variable)\r\n    return (\r\n        <div className = 'receta_card'>\r\n            <h3 className = 'title'>{nombre}</h3>\r\n\r\n            <h4>Ingredientes</h4>\r\n\r\n            <ul>\r\n            {\r\n                ingredientes.map((ing,i) => (<li key = {i}>{ing}</li>))\r\n            }\r\n            </ul>\r\n            \r\n            <h4>Procedimiento</h4>\r\n            <ol>\r\n            {\r\n                procedimiento.map((paso,i) => (<li key = {i}>{paso}</li>))\r\n            }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const CrearForm = ({postFuntion,loading}) => {\r\n\r\n    const [formValues,handleInputChange, resetValues] = useForm()            \r\n    const {nombre='',ingredientes = '',procedimiento = ''} = formValues;\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(nombre.replace(/\\s+/g, '').length < 4 || ingredientes.replace(/\\s+/g, '').length < 4 || procedimiento.replace(/\\s+/g, '').length < 4){\r\n            alert('nop');\r\n            return;\r\n        }\r\n        postFuntion('recetas', undefined, formValues,'POST');\r\n        // resetValues();\r\n    }\r\n    return (\r\n        <form className= \"formContainer container\" onSubmit = {handleSubmit}>\r\n                \r\n            <label className= 'marginTop1rem' >Nombre</label>\r\n            <input \r\n                name = 'nombre'\r\n                value = {nombre} \r\n                type= 'text'\r\n                onChange = {handleInputChange}\r\n                autoComplete = 'off'\r\n            />\r\n\r\n            <label>Ingredientes</label>\r\n            <textarea \r\n                name = 'ingredientes'\r\n                value = {ingredientes}\r\n                onChange = {handleInputChange}\r\n            />\r\n\r\n            <label>Procedimiento</label>\r\n            <textarea\r\n                name = 'procedimiento'\r\n                value = {procedimiento} \r\n                onChange = {handleInputChange}\r\n            />\r\n            <input \r\n                type = 'submit' value= 'Subir receta'\r\n                disabled = {loading}\r\n             />\r\n            </form>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useFetchCrearReceta } from '../../hooks/useFetchCrearReceta';\r\nimport { RecetaItem } from '../recetasScreen/RecetaItem';\r\nimport {useForm} from '../../hooks/useForm'\r\nimport './crearReceta.css';\r\nimport { CrearForm } from './CrearForm';\r\n\r\n\r\n// {\r\n//     \"nombre\": \"Caldo de camaron\",\r\n//     \"ingredientes\": [\"camaron\", \"papas\", \"SAL\", \"zanahorias\"],\r\n//     \"procedimiento\": [\"Cortar las verduras\", \"Sancochar\", \"Integrar\"]\r\n// }\r\n\r\n\r\n\r\n// const useForm = (initialState = {}) => {\r\n//     const [values, setValues] = useState(initialState);\r\n\r\n//     function resetValues() {\r\n//         setValues({\r\n//             nombre: '',\r\n//             ingredientes: '',\r\n//             procedimiento: ''\r\n//         });\r\n//     }\r\n\r\n\r\n//     const handleInputChange = ({target}) => {\r\n        \r\n//     setValues({\r\n//         ...values,\r\n//         [target.name]: target.value\r\n//         })\r\n//     }\r\n//     return [values, handleInputChange, resetValues];\r\n// }\r\n\r\n\r\nexport const CrearReceta = () => {\r\n\r\n    const [{data,loading,error,msg}, postFuntion ] = useFetchCrearReceta();\r\n    \r\n            return (\r\n        <>\r\n            <CrearForm postFuntion = {postFuntion} loading = {loading}/>   \r\n\r\n            {\r\n                loading &&\r\n                <span>Cargando</span>\r\n            }\r\n            \r\n            {\r\n                error && <span>{msg}</span>\r\n            }\r\n          \r\n            {\r\n                data && <pre>{JSON.stringify(data)}</pre>\r\n            }\r\n            {\r\n                data && <RecetaItem {...data}/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { fetchConToken } from \"../helpers/fetch\"\r\n\r\n\r\nexport const useFetchCrearReceta = () => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: false,\r\n        msg:''\r\n    });\r\n    \r\n    \r\n    const postFuntion = async(endpoint, optional,data,method) => {\r\n\r\n        setState({\r\n            ...state,\r\n            loading: true\r\n        });\r\n            const separador = (variable ) => {\r\n            const temporal = variable.trim().split(',');\r\n            const arreglo = temporal.map(element => {\r\n                const valor = element.trim();\r\n                return valor\r\n            })\r\n            return arreglo;\r\n        };\r\n        const ingredientes = separador(data.ingredientes);\r\n        const procedimiento = separador(data.procedimiento);\r\n        const newData = {\r\n            nombre: data.nombre,\r\n            ingredientes,\r\n            procedimiento\r\n        }\r\n        const  respuesta = await fetchConToken(endpoint, optional,newData,method);\r\n        if(respuesta){\r\n            setState({\r\n                ...state,\r\n                loading: false,\r\n                data: respuesta\r\n            });\r\n        }else{\r\n            setState({\r\n                ...state,\r\n                loading: false,\r\n                error: true,\r\n                msg: 'Hubo un error'\r\n            });\r\n            setTimeout(() => {\r\n                setState({\r\n                    ...state,\r\n                    error: false,\r\n                    msg: ''\r\n                })\r\n            }, 3000);\r\n        }\r\n    }\r\n        \r\n\r\n    return [state, postFuntion];\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useFetch2 } from '../../hooks/useFetch';\r\nimport { useFetchActualizaReceta } from '../../hooks/useFetchActualizaReceta';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const EdicionScreen = () => {\r\n\r\n  const {recetaId} = useParams();\r\n\r\n  const {data:receta,loading} = useFetch2(recetaId);\r\n  const [{data,loading2,error,msg},actualizarFuncion] = useFetchActualizaReceta();\r\n  const [formValues ,handleInputChange] = useForm();\r\n  \r\n  \r\n  \r\n\r\n  const {nombre=receta.nombre,ingredientes=receta.ingredientes,procedimiento=receta.procedimiento} = formValues;  \r\n  const {nombreInicial,ingredientesInicial,procedimientoInicial} = formValues;\r\n\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // console.log(nombreInicial);\r\n    // console.log(ingredientesInicial);\r\n    // console.log(procedimientoInicial);\r\n    // console.log(formValues)\r\n\r\n    if(Object.keys(formValues).length === 0){\r\n      alert('Debes editar la receta para modificarla.')\r\n      return  \r\n    }\r\n\r\n    if(nombre.replace(/\\s+/g, '').length < 4 || ingredientes.toString().replace(/\\s+/g, '').length < 4 || procedimiento.toString().replace(/\\s+/g, '').length < 4){\r\n        alert('nop');\r\n        return;\r\n    }\r\n    \r\n    actualizarFuncion('recetas', recetaId, formValues,'PUT');\r\n    // resetValues();\r\n  }\r\n  // console.log(nombre)\r\n  // console.log(formValues)\r\n  // try{\r\n  //   let aux = ingredientes.toString();\r\n  //   console.log(aux)\r\n  // }catch{console.log('error')}\r\n  // // console.log(ingredientes.toString())\r\n  // console.log(procedimiento)\r\n  \r\n  return (\r\n    <div>\r\n      {  \r\n        loading && <p>Cargando...</p>\r\n      }\r\n\r\n      {\r\n        receta && !loading && \r\n        \r\n        <form className='formContainer container' onSubmit={handleSubmit}>\r\n          <label className='marginTop1rem' >Nombre</label>\r\n          <input\r\n            name='nombre' \r\n            type = 'text'\r\n            autoComplete='off'\r\n            value={nombre}\r\n            onChange = {handleInputChange} \r\n          />\r\n          <label className='marginTop1rem'>Ingredientes</label>\r\n          <textarea \r\n            value={ingredientes}\r\n            name= 'ingredientes'\r\n            onChange={handleInputChange}\r\n          />\r\n          <label className='marginTop1rem'>Procedimiento</label>\r\n          <textarea \r\n            value={procedimiento}\r\n            name = 'procedimiento'\r\n            onChange={handleInputChange}\r\n          />\r\n          <input \r\n                type = 'submit' value= 'Subir receta'\r\n                disabled = {loading2}\r\n             />\r\n        </form>\r\n\r\n      }\r\n\r\n      {\r\n        data && <pre>{JSON.stringify(data)}</pre>\r\n      }\r\n\r\n      {\r\n        loading2 && <p>Cargando...</p>\r\n      }\r\n\r\n      {\r\n        error && <span>{msg}</span>\r\n      }\r\n\r\n      {/* {\r\n        receta && !loading && <input defaultValue={'value'} />\r\n      } */}\r\n\r\n      {/* {\r\n        receta && !loading && <textarea defaultValue={receta.ingredientes}/>\r\n      } */}\r\n\r\n      {/* {\r\n         receta && !loading && <textarea defaultValue={receta.procedimiento}/>\r\n      } */}\r\n      \r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\n\r\n\r\n\r\n\r\n\r\nexport const useFetchActualizaReceta = () => {\r\n\r\n    const [state, setState] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: false,\r\n        msg:''\r\n    });\r\n\r\n    const actualizaFuncion = async(endpoint, optional,{nombre,ingredientes,procedimiento},method) => {\r\n\r\n        // const VerificaNombre = !!nombre ? nombre : !!nombre;\r\n        const VerificaNombre = nombre || false;\r\n        const VerificaIngredientes = ingredientes || false;\r\n        const VerificaProcedimiento = procedimiento || false;\r\n\r\n        console.log(VerificaNombre)\r\n        setState({\r\n            ...state,\r\n            loading: true\r\n        });\r\n\r\n            const separador = (variable ) => {\r\n            if(!variable){\r\n                return undefined;\r\n            }\r\n            const temporal = variable.trim().split(',');\r\n            const arreglo = temporal.map(element => {\r\n                const valor = element.trim();\r\n                return valor\r\n            })\r\n            return arreglo;\r\n        };\r\n\r\n    // const newDato = (nombre,ingredientes,procedimiento) =>{\r\n    //     const verificacion = [nombre,ingredientes,procedimiento];\r\n    //     const objeto = {};\r\n    //     if\r\n    // }    \r\n\r\n        let newData = {};\r\n        if (!!VerificaNombre){\r\n            newData.nombre = VerificaNombre;\r\n        }\r\n        if(!!VerificaIngredientes) {\r\n            newData.ingredientes = separador(VerificaIngredientes);\r\n\r\n        }\r\n        if(!!VerificaProcedimiento)\r\n            newData.procedimiento = separador(VerificaProcedimiento);\r\n        \r\n\r\n            // console.log(`newData `)\r\n            // console.log(newData)\r\n    //     const ingredientes = separador(data.ingredientes);\r\n    //     const procedimiento = separador(data.procedimiento);\r\n    //     const newData = {\r\n    //         nombre: data.nombre,\r\n    //         ingredientes,\r\n    //         procedimiento\r\n    //     }\r\n        const  respuesta = await fetchConToken(endpoint, optional,newData,method);\r\n        if(respuesta){\r\n            setState({\r\n                ...state,\r\n                loading: false,\r\n                data: respuesta\r\n            });\r\n        }else{\r\n            setState({\r\n                ...state,\r\n                loading: false,\r\n                error: true,\r\n                msg: 'Hubo un error'\r\n            });\r\n            setTimeout(() => {\r\n                setState({\r\n                    ...state,\r\n                    error: false,\r\n                    msg: ''\r\n                })\r\n            }, 3000);\r\n        }\r\n     }\r\n        \r\n\r\n     return [state, actualizaFuncion];\r\n\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import { useEffect } from 'react/cjs/react.development';\r\n\r\nimport { useFetchAlll } from '../../hooks/useFetchAll';\r\nimport { RecetaCard } from '../home/RecetaCard';\r\n\r\nexport const MisRecetasScreen = ({uid}) => {\r\n  const {data, loading, error,msg} = useFetchAlll ('usuarios', uid, undefined, undefined); \r\n  \r\n  // useEffect(() => {\r\n  //   console.log('montado')\r\n  \r\n  //   return () => {\r\n  //     console.log('desmontado')\r\n  //   }\r\n  // }, [])\r\n  \r\n  \r\n  return (\r\n\r\n      <div className='container' >\r\n        <h3>\r\n          Mis recetas s\r\n        </h3>\r\n\r\n      {loading && <p>Cargando...</p>}\r\n      \r\n      { data && <pre>{JSON.stringify(data)}</pre>}\r\n\r\n      {\r\n        (data)?\r\n      data.usuario.recetas.map(receta => {  \r\n        return  <Link\r\n              key= {receta._id}\r\n              className = 'cardReceta noStyle displayBlock'\r\n              to = {`./gestionar/receta/${receta._id}`}\r\n              >{receta.nombre}</Link>\r\n      })\r\n      :\r\n        <p>{msg}</p>\r\n      }\r\n      \r\n      {/* {\r\n        data ? \r\n          data.usuario.recetas.map(receta => (<RecetaCard\r\n              key = {receta._id}\r\n              receta = {receta}\r\n              />))\r\n              :\r\n                (<p>{error.msg} </p>)\r\n      } */}\r\n\r\n      </div>\r\n\r\n      \r\n        \r\n        \r\n        \r\n        \r\n    );\r\n};\r\n","import { useEffect, useState } from \"react\"\r\nimport { fetchConToken } from \"../helpers/fetch\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const useFetchAlll = (endpoint, optional,data,method) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: undefined,\r\n        loading: true,\r\n        error: false,\r\n        msg:''\r\n    })\r\n    \r\n    useEffect(() => {\r\n        let controller = new AbortController();\r\n        const signal = controller.signal;\r\n        let isActive = true;\r\n        fetchConToken(endpoint, optional,data,method,signal)\r\n            .then(data => {\r\n                if(isActive){\r\n                    setState({\r\n                        data,\r\n                        loading: false,\r\n                        error: false,\r\n                        msg: ''\r\n                    })\r\n                }\r\n            })\r\n\r\n       return () => {\r\n           isActive = false;\r\n           controller.abort();\r\n       }\r\n    }, [endpoint,optional,data,method])\r\n\r\n\r\n    return state;\r\n}\r\n\r\n","import React from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { useFetch2 } from '../../hooks/useFetch'\r\nimport { RecetaItem } from './RecetaItem';\r\n\r\nexport const RecetaScreen = ({uid}) => {\r\n\r\n    \r\n    const {recetaId} = useParams();\r\n    const {data:receta,loading} = useFetch2(recetaId);\r\n    \r\n    // if(!uid){\r\n    //     return (\r\n    //         <> \r\n    //             <Redirect to = '/auth/login'/>\r\n    //         </>\r\n    //     )\r\n    // }\r\n    \r\n    return (\r\n\r\n\r\n\r\n        <div>\r\n\r\n            {loading && <p>Cargando ...</p>}\r\n\r\n            {\r\n               receta && !loading && receta.length !== 0 &&\r\n                <RecetaItem {...receta} /> \r\n            }\r\n\r\n            {\r\n                !receta && <span>Hubo un error</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\nimport { CrearReceta } from '../components/crearReceta/CrearReceta';\r\nimport { EdicionScreen } from '../components/misRecetasScreen/EdicionScreen';\r\nimport { MisRecetasScreen } from '../components/misRecetasScreen/MisRecetasScreen';\r\nimport { RecetaScreen } from '../components/recetasScreen/RecetaScreen';\r\n\r\nexport const PrivateRouter = ({uid}) => {\r\n    console.log('paso por privateRouter')\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path='/private/crear'\r\n                >\r\n                    <CrearReceta/>\r\n                </Route>\r\n\r\n                <Route\r\n                    exact\r\n                    path= '/private/receta/:recetaId'\r\n                >\r\n                    <RecetaScreen/>\r\n                </Route>\r\n\r\n                <Route\r\n                        exact\r\n                        path = '/private/gestionar'\r\n                    >\r\n                        <MisRecetasScreen\r\n                            uid = {uid}\r\n                        />\r\n                </Route>\r\n\r\n                <Route\r\n                    exact\r\n                    path= '/private/gestionar/receta/:recetaId'\r\n\r\n                >\r\n                    <EdicionScreen/>\r\n                </Route>\r\n\r\n                <Redirect to = '/'/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    propiedades,\r\n    ...rest\r\n}) => {\r\n    console.log('paso por publicRoute')\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( !isAuthenticated )\r\n                    ? ( <Component { ...props } {...propiedades}/> )\r\n                    : ( <Redirect to=\"/\" /> )\r\n            )}\r\n        />\r\n    )\r\n    // return (\r\n    //     <Route { ...rest }\r\n    //         component={ (props) => {\r\n    //             if( !isAuthenticated ){\r\n\r\n    //                 ( <Component { ...props } {...propiedades}/> )\r\n    //             }\r\n    //                 // ? \r\n    //                 // : ( <Redirect to=\"/\" /> )\r\n    //             }}\r\n    //     />\r\n    // )\r\n}","import React, { useState, useEffect } from 'react';\r\n// import '../App.css';\r\nimport {\r\n    // BrowserRouter as Router,\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n    Link,\r\n  } from \"react-router-dom\";\r\nimport { BuscarScreen } from '../components/busquedaScreen/BuscarScreen';\r\nimport { HomeScreen } from '../components/home/HomeScreen';\r\nimport { Autentificando } from './Autentificando';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PrivateRouter } from './PrivateRouter';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n    const [uid, setUid] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [wait, setWait] = useState(true);\r\n    useEffect(() => {\r\n\r\n        // const token = localStorage.getItem('token') || '';\r\n        const name1 = localStorage.getItem('name') || '';\r\n        const uid1 = localStorage.getItem('uid') || '';\r\n        if(!(!!uid1)){\r\n            setWait(false);\r\n            console.log(uid1);\r\n            console.log('if')\r\n            return\r\n        }\r\n        setUid(uid1);\r\n        setName(name1);\r\n        setTimeout(() => {\r\n            setWait(false);\r\n            console.log('setWait')\r\n        }, 500);\r\n        // setWait(false);\r\n\r\n    }, []);\r\n    // console.log(!!uid)\r\n    // console.log(uid)\r\n    // console.log(!!name)\r\n    return (\r\n        <Router>\r\n            <header className = 'marginTop1rem' >\r\n                <h1 className = 'marginBottom1rem' >Recetario familiar</h1>\r\n\r\n                {\r\n                    uid     &&\r\n                    <button\r\n                        className = 'centralContainer'\r\n                        onClick = {() => {\r\n                            localStorage.clear();\r\n                            setUid('')}}\r\n                    >Log out</button>\r\n                }\r\n            </header>\r\n\r\n                <nav className = 'marginBottom1rem'>\r\n                    <ul >\r\n                        <li className = 'marginBottomMrem'>\r\n                            <Link to = '/'>Home</Link>\r\n                        </li>\r\n                        <li     className = 'marginBottomMrem'>\r\n                            <Link to = '/buscar'>Buscar</Link>\r\n                        </li>\r\n                        <li className = 'marginBottomMrem'>\r\n                            <Link to = '/private/crear'>Crear</Link>\r\n                        </li >\r\n                        <li className = 'marginBottomMrem'>\r\n                            <Link to = '/private/gestionar'>Gestionar</Link>\r\n                        </li>\r\n                        {/* <li className = 'marginBottomMrem'>\r\n                            <Link to = '/auth/login'>Login</Link>\r\n                        </li> */}\r\n                        {/* <li> */}\r\n                            {/* <Link to = '/crear'>Privada pruebas</Link> */}\r\n                        {/* </li> */}\r\n                    </ul>\r\n                </nav>\r\n            <div>\r\n                 <Switch>\r\n                    <Route\r\n                        exact\r\n                        path = '/'\r\n                        component = {HomeScreen}\r\n\r\n                    />\r\n\r\n                    {/* <Route\r\n                        exact\r\n                        path = '/buscar'\r\n                        component = {BuscarScreen}\r\n                    /> */}\r\n\r\n                    <Route\r\n                        exact\r\n                        path='/buscar'\r\n\r\n                    >\r\n                        <BuscarScreen uid = {uid}/>\r\n                    </Route>\r\n                    {/* <Route\r\n                        exact\r\n                        path = '/crear'\r\n                        component = { CrearReceta}\r\n                    /> */}\r\n                    {/* <Route\r\n                        exact\r\n                        path = '/gestionar'\r\n                        component = { () => (<p>Ruta para gestionar las recetas</p>)}\r\n                    /> */}\r\n\r\n                    {/* <Route\r\n                        exact\r\n                        path = '/receta/:recetaId'\r\n                    >\r\n                        <RecetaScreen\r\n                            uid = {!!uid}\r\n                        />\r\n                    </Route>  */}\r\n\r\n                    {/* <Route\r\n                        exact\r\n                        path = '/login'\r\n\r\n                    >\r\n                        <LoginScreen setUid = {setUid}/>\r\n                    </Route> */}\r\n\r\n                    {/* <PublicRoute\r\n                       path = '/auth/login'\r\n                       exact\r\n                       component = {LoginScreen}\r\n                       isAuthenticated = {!!uid}\r\n                       propiedades = {{setUid,setName}}\r\n                    /> */}\r\n\r\n                    <PublicRoute\r\n                       path = '/auth'\r\n                       component = {AuthRouter}\r\n                       isAuthenticated = {!!uid}\r\n                       propiedades = {{setUid,setName}}\r\n                    />\r\n                    {\r\n                        !wait ? \r\n\r\n                        <PrivateRoute\r\n                       path = '/private'\r\n                       component = {PrivateRouter}\r\n                       isAuthenticated = {!!uid}\r\n                       propiedades = {{uid}}\r\n\r\n                    />\r\n                        \r\n                        :\r\n                           <Route\r\n                            path='/private'\r\n                            component ={Autentificando}\r\n                           />\r\n                    }\r\n                    {/* {\r\n                        !wait ? \r\n\r\n                        <RutasPrueba\r\n                            isAuthenticadet = {!!uid}\r\n                            // propiedades = {{setUid,setName,uid}}\r\n                            setuid = {setUid}\r\n                            setName = {setName}\r\n                            uid= {uid}\r\n    \r\n                        />\r\n                        :\r\n                           <Route\r\n                            path='/private'\r\n                            component ={Autentificando}\r\n                           />\r\n                    } */}\r\n\r\n                     {/* <PublicRoute\r\n                       path = '/auth'\r\n                       component = {AuthRouter}\r\n                       isAuthenticated = {!!uid}\r\n                       propiedades = {{setUid,setName}}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                       path = '/private'\r\n                       component = {PrivateRouter}\r\n                       isAuthenticated = {!!uid}\r\n                       propiedades = {{uid}}\r\n\r\n                    /> */}\r\n\r\n\r\n                    <Redirect\r\n                       to = '/'\r\n                    />\r\n\r\n                 </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n\r\n}\r\n","import { useState } from 'react';\r\nimport './App.css'\r\n\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const App = () => {\r\n  return (\r\n    <AppRouter/>\r\n  );\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}